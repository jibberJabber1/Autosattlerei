{"version":3,"file":"gallery.component.d.ts","sources":["gallery.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';\nimport { ImageService } from '../services/image.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient } from '@angular/common/http';\nexport declare class GalleryComponent implements OnInit, OnDestroy, OnChanges {\n    imageService: ImageService;\n    http: HttpClient;\n    changeDetectorRef: ChangeDetectorRef;\n    gallery: Array<any>;\n    imageDataStaticPath: string;\n    imageDataCompletePath: string;\n    dataFileName: string;\n    images: Array<any>;\n    minimalQualityCategory: string;\n    viewerSubscription: Subscription;\n    rowIndex: number;\n    rightArrowInactive: boolean;\n    leftArrowInactive: boolean;\n    providedImageMargin: number;\n    providedImageSize: number;\n    providedGalleryName: string;\n    providedMetadataUri: string;\n    rowsPerPage: number;\n    viewerChange: EventEmitter<boolean>;\n    galleryContainer: ElementRef;\n    imageElements: QueryList<any>;\n    triggerCycle(event: any): void;\n    windowResize(event: any): void;\n    constructor(imageService: ImageService, http: HttpClient, changeDetectorRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    openImageViewer(img: any): void;\n    /**\n     * direction (-1: left, 1: right)\n     */\n    navigate(direction: number): void;\n    calcImageMargin(): number;\n    private fetchDataAndRender;\n    private render;\n    private shouldAddCandidate;\n    private calcRowHeight;\n    private calcOriginalRowWidth;\n    private calcIdealHeight;\n    private getGalleryWidth;\n    private scaleGallery;\n    private checkForAsyncLoading;\n    private isScrolledIntoView;\n    private refreshNavigationErrorState;\n}\n"]}