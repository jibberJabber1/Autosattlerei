{"version":3,"file":"angular2-image-gallery.umd.js","sources":["ng://angular2-image-gallery/lib/services/image.service.ts","ng://angular2-image-gallery/lib/gallery/gallery.component.ts","ng://angular2-image-gallery/lib/viewer/viewer.component.ts","ng://angular2-image-gallery/lib/angular2-image-gallery.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\n\n@Injectable()\nexport class ImageService {\n    private imagesUpdatedSource = new Subject<Array<any>>()\n    private imageSelectedIndexUpdatedSource = new Subject<number>()\n    private showImageViewerSource = new Subject<boolean>()\n\n    imagesUpdated$: Observable<Array<any>> = this.imagesUpdatedSource.asObservable()\n    imageSelectedIndexUpdated$: Observable<number> = this.imageSelectedIndexUpdatedSource.asObservable()\n    showImageViewerChanged$: Observable<boolean> = this.showImageViewerSource.asObservable()\n\n    updateImages(images: Array<any>): void {\n        this.imagesUpdatedSource.next(images)\n    }\n\n    updateSelectedImageIndex(newIndex: number): void {\n        this.imageSelectedIndexUpdatedSource.next(newIndex)\n    }\n\n    showImageViewer(show: boolean): void {\n        this.showImageViewerSource.next(show)\n    }\n}\n","import {\n  ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener,\n  Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges, ViewChild, ViewChildren\n} from '@angular/core'\nimport { ImageService } from '../services/image.service'\nimport { Subscription } from 'rxjs/internal/Subscription'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n    selector: 'gallery',\n    templateUrl: './gallery.component.html',\n    styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit, OnDestroy, OnChanges {\n    gallery: Array<any> = []\n    imageDataStaticPath: string = 'assets/img/gallery/'\n    imageDataCompletePath: string = ''\n    dataFileName: string = 'data.json'\n    images: Array<any> = []\n    minimalQualityCategory = 'preview_xxs'\n    viewerSubscription: Subscription\n    rowIndex: number = 0\n    rightArrowInactive: boolean = false\n    leftArrowInactive: boolean = false\n\n    @Input('flexBorderSize') providedImageMargin: number = 3\n    @Input('flexImageSize') providedImageSize: number = 7\n    @Input('galleryName') providedGalleryName: string = ''\n    @Input('metadataUri') providedMetadataUri: string = undefined\n    @Input('maxRowsPerPage') rowsPerPage: number = 200\n\n    @Output() viewerChange = new EventEmitter<boolean>()\n\n    @ViewChild('galleryContainer', { static: true }) galleryContainer: ElementRef\n    @ViewChildren('imageElement') imageElements: QueryList<any>\n\n    @HostListener('window:scroll', ['$event']) triggerCycle(event: any): void {\n        this.scaleGallery()\n    }\n\n    @HostListener('window:resize', ['$event']) windowResize(event: any): void {\n        this.render()\n    }\n\n    constructor(public imageService: ImageService, public http: HttpClient, public changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit(): void {\n        this.fetchDataAndRender()\n        this.viewerSubscription = this.imageService.showImageViewerChanged$\n            .subscribe((visibility: boolean) => this.viewerChange.emit(visibility))\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // input params changed\n        if (changes['providedGalleryName'] != undefined) {\n            this.fetchDataAndRender()\n        } else {\n            this.render()\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.viewerSubscription) {\n            this.viewerSubscription.unsubscribe()\n        }\n    }\n\n    openImageViewer(img: any): void {\n        this.imageService.updateImages(this.images)\n        this.imageService.updateSelectedImageIndex(this.images.indexOf(img))\n        this.imageService.showImageViewer(true)\n    }\n\n    /**\n     * direction (-1: left, 1: right)\n     */\n    navigate(direction: number): void {\n        if ((direction === 1 && this.rowIndex < this.gallery.length - this.rowsPerPage)\n            || (direction === -1 && this.rowIndex > 0)) {\n            this.rowIndex += (this.rowsPerPage * direction)\n        }\n        this.refreshNavigationErrorState()\n    }\n\n    calcImageMargin(): number {\n        const galleryWidth = this.getGalleryWidth()\n        const ratio = galleryWidth / 1920\n        return Math.round(Math.max(1, this.providedImageMargin * ratio))\n    }\n\n    private fetchDataAndRender(): void {\n        this.imageDataCompletePath = this.providedMetadataUri\n\n        if (!this.providedMetadataUri) {\n            this.imageDataCompletePath = this.providedGalleryName !== '' ?\n                `${this.imageDataStaticPath + this.providedGalleryName}/${this.dataFileName}` :\n                this.imageDataStaticPath + this.dataFileName\n        }\n\n        this.http.get(this.imageDataCompletePath)\n          .subscribe(\n            (data: Array<any>) => {\n                    this.images = data\n                    this.imageService.updateImages(this.images)\n\n                    this.images.forEach(image => {\n                      image['galleryImageLoaded'] = false\n                      image['viewerImageLoaded'] = false\n                      image['srcAfterFocus'] = ''\n                    })\n                    // twice, single leads to different strange browser behaviour\n                    this.render()\n                    this.render()\n                },\n              err => {\n                    if (this.providedMetadataUri) {\n                      console.error(`Provided endpoint '${this.providedMetadataUri}' did not serve metadata correctly or in the expected format.\n      See here for more information: https://github.com/BenjaminBrandmeier/angular2-image-gallery/blob/master/docs/externalDataSource.md,\n      Original error: ${err}`)\n                    } else {\n                        console.error(`Did you run the convert script from angular2-image-gallery for your images first? Original error: ${err}`)\n                    }\n              },\n            () => undefined)\n    }\n\n    private render(): void {\n        this.gallery = []\n\n        let tempRow = [this.images[0]]\n        let currentRowIndex = 0\n        let i = 0\n\n        for (i; i < this.images.length; i++) {\n            while (this.images[i + 1] && this.shouldAddCandidate(tempRow, this.images[i + 1])) {\n                i++\n            }\n            if (this.images[i + 1]) {\n                tempRow.pop()\n            }\n            this.gallery[currentRowIndex++] = tempRow\n\n            tempRow = [this.images[i + 1]]\n        }\n\n        this.scaleGallery()\n    }\n\n    private shouldAddCandidate(imgRow: Array<any>, candidate: any): boolean {\n        const oldDifference = this.calcIdealHeight() - this.calcRowHeight(imgRow)\n        imgRow.push(candidate)\n        const newDifference = this.calcIdealHeight() - this.calcRowHeight(imgRow)\n\n        return Math.abs(oldDifference) > Math.abs(newDifference)\n    }\n\n    private calcRowHeight(imgRow: Array<any>): number {\n        const originalRowWidth = this.calcOriginalRowWidth(imgRow)\n\n        const ratio = (this.getGalleryWidth() - (imgRow.length - 1) * this.calcImageMargin()) / originalRowWidth\n        const rowHeight = imgRow[0][this.minimalQualityCategory]['height'] * ratio\n\n        return rowHeight\n    }\n\n    private calcOriginalRowWidth(imgRow: Array<any>): number {\n        let originalRowWidth = 0\n        imgRow.forEach(img => {\n            const individualRatio = this.calcIdealHeight() / img[this.minimalQualityCategory]['height']\n            img[this.minimalQualityCategory]['width'] = img[this.minimalQualityCategory]['width'] * individualRatio\n            img[this.minimalQualityCategory]['height'] = this.calcIdealHeight()\n            originalRowWidth += img[this.minimalQualityCategory]['width']\n        })\n\n        return originalRowWidth\n    }\n\n    private calcIdealHeight(): number {\n        return this.getGalleryWidth() / (80 / this.providedImageSize) + 100\n    }\n\n    private getGalleryWidth(): number {\n        if (this.galleryContainer.nativeElement.clientWidth === 0) {\n            // for IE11\n            return this.galleryContainer.nativeElement.scrollWidth\n        }\n        return this.galleryContainer.nativeElement.clientWidth\n    }\n\n    private scaleGallery(): void {\n        let imageCounter = 0\n        let maximumGalleryImageHeight = 0\n\n        this.gallery.slice(this.rowIndex, this.rowIndex + this.rowsPerPage)\n          .forEach(imgRow => {\n            const originalRowWidth = this.calcOriginalRowWidth(imgRow)\n\n            if (imgRow !== this.gallery[this.gallery.length - 1]) {\n                const ratio = (this.getGalleryWidth() - (imgRow.length - 1) * this.calcImageMargin()) / originalRowWidth\n\n                imgRow.forEach((img: any) => {\n                    img['width'] = img[this.minimalQualityCategory]['width'] * ratio\n                    img['height'] = img[this.minimalQualityCategory]['height'] * ratio\n                    maximumGalleryImageHeight = Math.max(maximumGalleryImageHeight, img['height'])\n                    this.checkForAsyncLoading(img, imageCounter++)\n                })\n            } else {\n                imgRow.forEach((img: any) => {\n                    img.width = img[this.minimalQualityCategory]['width']\n                    img.height = img[this.minimalQualityCategory]['height']\n                    maximumGalleryImageHeight = Math.max(maximumGalleryImageHeight, img['height'])\n                    this.checkForAsyncLoading(img, imageCounter++)\n                })\n            }\n        })\n\n        this.minimalQualityCategory = maximumGalleryImageHeight > 375 ? 'preview_xs' : 'preview_xxs'\n        this.refreshNavigationErrorState()\n\n        this.changeDetectorRef.detectChanges()\n    }\n\n    private checkForAsyncLoading(image: any, imageCounter: number): void {\n        const imageElements = this.imageElements.toArray()\n\n        if (image['galleryImageLoaded'] ||\n            (imageElements.length > 0 &&\n              imageElements[imageCounter] &&\n              this.isScrolledIntoView(imageElements[imageCounter].nativeElement))) {\n            image['galleryImageLoaded'] = true\n            image['srcAfterFocus'] = image[this.minimalQualityCategory]['path']\n        } else {\n            image['srcAfterFocus'] = ''\n        }\n    }\n\n    private isScrolledIntoView(element: any): boolean {\n        const elementTop = element.getBoundingClientRect().top\n        const elementBottom = element.getBoundingClientRect().bottom\n\n        return elementTop < window.innerHeight && elementBottom >= 0 && (elementBottom > 0 || elementTop > 0)\n    }\n\n    private refreshNavigationErrorState(): void {\n        this.leftArrowInactive = this.rowIndex == 0\n        this.rightArrowInactive = this.rowIndex > (this.gallery.length - this.rowsPerPage)\n    }\n}\n","import { ImageService } from '../services/image.service'\nimport { Component } from '@angular/core'\nimport { animate, state, style, transition, trigger } from '@angular/animations'\n\n@Component({\n    selector: 'viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.css'],\n    host: {\n        '(document:keydown)': 'onKeydown($event)'\n    },\n    animations: [\n        trigger('imageTransition', [\n            state('enterFromRight', style({\n                opacity: 1,\n                transform: 'translate(0px, 0px)'\n            })),\n            state('enterFromLeft', style({\n                opacity: 1,\n                transform: 'translate(0px, 0px)'\n            })),\n            state('leaveToLeft', style({\n                opacity: 0,\n                transform: 'translate(-100px, 0px)'\n            })),\n            state('leaveToRight', style({\n                opacity: 0,\n                transform: 'translate(100px, 0px)'\n            })),\n            transition('* => enterFromRight', [\n                style({\n                    opacity: 0,\n                    transform: 'translate(30px, 0px)'\n                }),\n                animate('250ms 500ms ease-in')\n            ]),\n            transition('* => enterFromLeft', [\n                style({\n                    opacity: 0,\n                    transform: 'translate(-30px, 0px)'\n                }),\n                animate('250ms 500ms ease-in')\n            ]),\n            transition('* => leaveToLeft', [\n                style({\n                    opacity: 1\n                }),\n                animate('250ms ease-out')]\n            ),\n            transition('* => leaveToRight', [\n                style({\n                    opacity: 1\n                }),\n                animate('250ms ease-out')]\n            )\n        ]),\n        trigger('showViewerTransition', [\n            state('true', style({\n                opacity: 1\n            })),\n            state('void', style({\n                opacity: 0\n            })),\n            transition('void => *', [\n                style({\n                    opacity: 0\n                }),\n                animate('1000ms ease-in')]\n            ),\n            transition('* => void', [\n                style({\n                    opacity: 1\n                }),\n                animate('500ms ease-out')]\n            )\n        ])\n    ]\n})\n\nexport class ViewerComponent {\n    showViewer: boolean\n    images: Array<any> = [{}]\n    currentIdx: number = 0\n    leftArrowVisible: boolean = true\n    rightArrowVisible: boolean = true\n    categorySelected: string = 'preview_xxs'\n    transform: number\n    math: Math\n    private qualitySelectorShown: boolean = false\n    private qualitySelected: string = 'auto'\n\n    constructor(private imageService: ImageService) {\n        imageService.imagesUpdated$.subscribe(\n            images => {\n                this.images = images\n            })\n        imageService.imageSelectedIndexUpdated$.subscribe(\n            newIndex => {\n                this.currentIdx = newIndex\n                this.images.forEach(image => image['active'] = false)\n                this.images[this.currentIdx]['active'] = true\n                this.transform = 0\n                this.updateQuality()\n            })\n        imageService.showImageViewerChanged$.subscribe(\n            showViewer => {\n                this.showViewer = showViewer\n            })\n        this.math = Math\n    }\n\n    get leftArrowActive(): boolean {\n        return this.currentIdx > 0\n    }\n\n    get rightArrowActive(): boolean {\n        return this.currentIdx < this.images.length - 1\n    }\n\n    pan(swipe: any): void {\n        this.transform = swipe.deltaX\n    }\n\n    onResize(): void {\n        this.images.forEach(image => {\n            image['viewerImageLoaded'] = false\n            image['active'] = false\n        })\n        this.updateImage()\n    }\n\n    showQualitySelector(): void {\n        this.qualitySelectorShown = !this.qualitySelectorShown\n    }\n\n    qualityChanged(newQuality: any): void {\n        this.qualitySelected = newQuality\n        this.updateImage()\n    }\n\n    imageLoaded(image: any): void {\n        image['viewerImageLoaded'] = true\n    }\n\n    /**\n     * direction (-1: left, 1: right)\n     * swipe (user swiped)\n     */\n    navigate(direction: number, swipe: any): void {\n        if ((direction === 1 && this.currentIdx < this.images.length - 1) ||\n            (direction === -1 && this.currentIdx > 0)) {\n\n            if (direction == -1) {\n                this.images[this.currentIdx]['transition'] = 'leaveToRight'\n                this.images[this.currentIdx - 1]['transition'] = 'enterFromLeft'\n            } else {\n                this.images[this.currentIdx]['transition'] = 'leaveToLeft'\n                this.images[this.currentIdx + 1]['transition'] = 'enterFromRight'\n            }\n            this.currentIdx += direction\n\n            if (swipe) {\n                this.hideNavigationArrows()\n            } else {\n                this.showNavigationArrows()\n            }\n            this.updateImage()\n        }\n    }\n\n    showNavigationArrows(): void {\n        this.leftArrowVisible = true\n        this.rightArrowVisible = true\n    }\n\n    closeViewer(): void {\n        this.images.forEach(image => image['transition'] = undefined)\n        this.images.forEach(image => image['active'] = false)\n        this.imageService.showImageViewer(false)\n    }\n\n    onKeydown(event: KeyboardEvent): void {\n        const prevent = [37, 39, 27, 36, 35]\n            .find(no => no === event.keyCode)\n        if (prevent) {\n            event.preventDefault()\n        }\n\n        switch (prevent) {\n            case 37:\n                // navigate left\n                this.navigate(-1, false)\n                break\n            case 39:\n                // navigate right\n                this.navigate(1, false)\n                break\n            case 27:\n                // esc\n                this.closeViewer()\n                break\n            case 36:\n                // pos 1\n                this.images[this.currentIdx]['transition'] = 'leaveToRight'\n                this.currentIdx = 0\n                this.images[this.currentIdx]['transition'] = 'enterFromLeft'\n                this.updateImage()\n                break\n            case 35:\n                // end\n                this.images[this.currentIdx]['transition'] = 'leaveToLeft'\n                this.currentIdx = this.images.length - 1\n                this.images[this.currentIdx]['transition'] = 'enterFromRight'\n                this.updateImage()\n                break\n            default:\n                break\n        }\n    }\n\n    private hideNavigationArrows(): void {\n        this.leftArrowVisible = false\n        this.rightArrowVisible = false\n    }\n\n    private updateImage(): void {\n        // wait for animation to end\n        setTimeout(() => {\n            this.updateQuality()\n            this.images[this.currentIdx]['active'] = true\n            this.images.forEach(image => {\n                if (image != this.images[this.currentIdx]) {\n                    image['active'] = false\n                    this.transform = 0\n                }\n            })\n        }, 500)\n    }\n\n    private updateQuality(): void {\n        const screenWidth = window.innerWidth\n        const screenHeight = window.innerHeight\n\n        switch (this.qualitySelected) {\n            case 'auto': {\n                this.categorySelected = 'preview_xxs'\n\n                if (screenWidth > this.images[this.currentIdx]['preview_xxs'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_xxs'].height) {\n                    this.categorySelected = 'preview_xs'\n                }\n                if (screenWidth > this.images[this.currentIdx]['preview_xs'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_xs'].height) {\n                    this.categorySelected = 'preview_s'\n                }\n                if (screenWidth > this.images[this.currentIdx]['preview_s'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_s'].height) {\n                    this.categorySelected = 'preview_m'\n                }\n                if (screenWidth > this.images[this.currentIdx]['preview_m'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_m'].height) {\n                    this.categorySelected = 'preview_l'\n                }\n                if (screenWidth > this.images[this.currentIdx]['preview_l'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_l'].height) {\n                    this.categorySelected = 'preview_xl'\n                }\n                if (screenWidth > this.images[this.currentIdx]['preview_xl'].width &&\n                    screenHeight > this.images[this.currentIdx]['preview_xl'].height) {\n                    this.categorySelected = 'raw'\n                }\n                break\n            }\n            case 'low': {\n                this.categorySelected = 'preview_xxs'\n                break\n            }\n            case 'mid': {\n                this.categorySelected = 'preview_m'\n                break\n            }\n            case 'high': {\n                this.categorySelected = 'raw'\n                break\n            }\n            default: {\n              this.categorySelected = 'preview_m'\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { ImageService } from './services/image.service'\nimport { GalleryComponent } from './gallery/gallery.component'\nimport { ViewerComponent } from './viewer/viewer.component'\nimport { FormsModule } from '@angular/forms'\nimport { CommonModule } from '@angular/common'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    GalleryComponent,\n    ViewerComponent\n  ],\n  providers: [\n    ImageService\n  ],\n  exports: [\n    GalleryComponent,\n    ViewerComponent\n  ]\n})\nexport class Angular2ImageGalleryModule {\n}\n"],"names":["Subject","Injectable","EventEmitter","Component","HttpClient","ChangeDetectorRef","Input","Output","ViewChild","ViewChildren","HostListener","trigger","state","style","transition","animate","NgModule","CommonModule","FormsModule","HttpClientModule","BrowserAnimationsModule"],"mappings":"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"}